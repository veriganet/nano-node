# #######
# PEERING
# #######
{{ if eq .Values.live.peering.enabled true }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: node-live
  labels:
    app: node-live
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: node-live
  serviceName: node-live
  replicas: {{ $.Values.live.node.replicaCount }}
  template:
    metadata:
      annotations:
        vault.security.banzaicloud.io/vault-addr: "https://vault.vault:8200"
        vault.security.banzaicloud.io/vault-role: "{{ .Values.abbreviation }}"
        vault.security.banzaicloud.io/vault-skip-verify: "true"
      namespace: {{ .Release.Namespace }}
      labels:
        app: node-live
    spec:
      initContainers:
        - name: dnsupdate
          image: "{{ .Values.dnsupdate.image.account }}/nano-node:{{ .Values.dnsupdate.image.tag }}"
          imagePullPolicy: {{ .Values.dnsupdate.image.pullPolicy }}
          command: ["/usr/local/bin/dnsupdate"]
          env:
            - name: ABBREVIATION
              value: "{{ .Values.abbreviation }}"
            - name: CLOUDFLARE_API_TOKEN
              value: "{{ .Values.cloudflareAPIToken }}"
            - name: CLOUDFLARE_ZONE_NAME
              value: "{{ .Values.cloudflareZoneName }}"
            - name: CLOUDFLARE_ZONE_ID
              value: "{{ .Values.cloudflareZoneID }}"
          resources: {{ toYaml .Values.dnsupdate.resources | nindent 12 }}
{{ if eq .Values.live.representative.enabled true }}
        - name: preprep
          image: "{{ .Values.preprep.image.account }}/{{ .Values.abbreviation }}:{{ .Values.preprep.image.tag }}"
          imagePullPolicy: {{ .Values.preprep.image.pullPolicy }}
          command: ["/usr/bin/entry_preprep.sh"]
          env:
            - name: ABBREVIATION
              value: {{ .Values.abbreviation }}
            - name: PRIVATE_KEY_REP0
              value: "vault:secret/data/{{ .Values.abbreviation }}/#private_key_rep0"
            - name: PRIVATE_KEY_REP1
              value: "vault:secret/data/{{ .Values.abbreviation }}/#private_key_rep1"
          resources: {{ toYaml .Values.preprep.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /root/{{ .Values.abbreviation | upper }}
            - name: data
              mountPath: /root/{{ .Values.abbreviation | title }}
{{ end }}
      containers:
        - name: node
          image: "{{ .Values.live.node.image.account }}/{{ .Values.abbreviation }}:{{ .Values.live.node.image.tag }}"
          imagePullPolicy: {{ .Values.live.node.image.pullPolicy }}
          command:
            - /usr/bin/entry.sh
            - {{ .Values.abbreviation }}_node
            - daemon
            - -l
            - --config node.enable_voting=true
          ports:
            # peering
            {{ if eq .Values.live.peering.enabled true }}
            - containerPort: {{ .Values.live.peering.port }}
              hostPort: {{ .Values.live.peering.port }}
              protocol: TCP
            {{ end }}
          resources: {{ toYaml .Values.live.node.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /root/{{ .Values.abbreviation | upper }}
            - name: data
              mountPath: /root/{{ .Values.abbreviation | title }}
          livenessProbe:
            # peering
            {{ if eq .Values.live.peering.enabled true }}
            tcpSocket:
              port: {{ .Values.live.peering.port }}
            {{ end }}
          readinessProbe:
            {{ if eq .Values.live.peering.enabled true }}
            tcpSocket:
              port: {{ .Values.live.peering.port }}
            {{ end }}
      imagePullSecrets:
        {{- with .Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      serviceAccountName: "{{ .Values.abbreviation }}"
      automountServiceAccountToken: true
  volumeClaimTemplates:
    - metadata:
        name: data
        namespace: {{ .Release.Namespace }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.live.node.storage }}
{{ end }}
# ###
# RPC
# ###
{{ if eq .Values.live.rpc.enabled true }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rpc-live
  namespace: {{ .Release.Namespace }}
  labels:
    app: rpc-live
spec:
  selector:
    matchLabels:
      app: rpc-live
  serviceName: rpc-live
  replicas: {{ $.Values.live.rpc.replicaCount }}
  template:
    metadata:
      annotations:
        vault.security.banzaicloud.io/vault-addr: "https://vault.vault:8200"
        vault.security.banzaicloud.io/vault-role: "{{ .Values.abbreviation }}"
        vault.security.banzaicloud.io/vault-skip-verify: "true"
      namespace: {{ .Release.Namespace }}
      labels:
        app: rpc-live
    spec:
      containers:
        - name: rpc
          image: "{{ .Values.live.rpc.image.account }}/{{ .Values.abbreviation }}:{{ .Values.live.rpc.image.tag }}"
          imagePullPolicy: {{ .Values.live.rpc.image.pullPolicy }}
          command:
            - /usr/bin/entry.sh
            - {{ .Values.abbreviation }}_node
            - daemon
            - --config node.logging.log_to_cerr=true
            - --rpc.enable_control=true
          ports:
            # rpc
            {{ if eq .Values.live.rpc.enabled true }}
            - containerPort: {{ .Values.live.rpc.port }}
              protocol: TCP
            {{ end }}
            # webSocket
            {{ if eq .Values.live.webSocket.enabled true }}
            - containerPort: {{ .Values.live.webSocket.port }}
              protocol: TCP
            {{ end }}
            - containerPort: 5000
              protocol: TCP
          resources: {{ toYaml .Values.live.rpc.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /root/{{ .Values.abbreviation | upper }}
            - name: data
              mountPath: /root/{{ .Values.abbreviation | title }}
          livenessProbe:
            # rpc
            httpGet:
              port: {{ .Values.live.rpc.port }}
          readinessProbe:
            httpGet:
              port: {{ .Values.live.rpc.port }}
      imagePullSecrets:
        {{- with .Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      serviceAccountName: "{{ .Values.abbreviation }}"
      automountServiceAccountToken: true
  volumeClaimTemplates:
    - metadata:
        name: data
        namespace: {{ .Release.Namespace }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.live.rpc.storage }}
{{ end }}
